#pragma checksum "D:\Descargas\PRGBDCursos\UIWEB\Views\Modulo1\VistaDocente.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b4b0c86c845cc6d59b0b7506e662d57572e26cd9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Modulo1_VistaDocente), @"mvc.1.0.view", @"/Views/Modulo1/VistaDocente.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Descargas\PRGBDCursos\UIWEB\Views\_ViewImports.cshtml"
using UIWEB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Descargas\PRGBDCursos\UIWEB\Views\_ViewImports.cshtml"
using UIWEB.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b4b0c86c845cc6d59b0b7506e662d57572e26cd9", @"/Views/Modulo1/VistaDocente.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"be8afc713e094a3ea743652521f61c46370f106b", @"/Views/_ViewImports.cshtml")]
    public class Views_Modulo1_VistaDocente : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<style>
    .FrmContainer{
        padding: 10px;
        display: flex;
        flex-wrap: wrap;

    }
    .FrmContainer h1{
        width: 100%;
    }
        .FrmContainer div {
            width: 40%;
            margin: 10px;
        }
        .FrmContainer div input{
            width: 100%;
        }
</style>
<script>
    function DrawTable(response, IdTable) {
        document.getElementById(IdTable).querySelector(""tbody"").innerHTML = """";
        response.forEach((Docente, index) => {
            const tr = document.createElement(""tr"");            
            document.getElementById(IdTable).querySelector(""tbody"").append(tr);
            for (var prop in Docente) {
                if (index == 0) {
                    const th = document.createElement(""th"");
                    th.innerText = prop;
                    document.getElementById(IdTable).querySelector(""thead"").append(th);
                }
                const td = document.createElement(""td"");
          ");
            WriteLiteral(@"      td.innerText = Docente[prop];
                tr.appendChild(td)
            }
            const thAction = document.createElement(""th"");
            const BtnEdit = document.createElement(""input"");
            BtnEdit.value = ""Edit"";
            BtnEdit.type = ""button"";
            const EditDocente = Docente;            
            BtnEdit.onclick = () => {
                console.log(EditDocente)
                console.log(txtId)                        
                txtId.value = EditDocente.Iddocente
                txtCod.value = EditDocente.codig;
                txtNombre.value = EditDocente.nombreDocente
                txtApellido.value = EditDocente.apellidoDocente;
                txtCedula.value = EditDocente.cedulaDocente;
                txtFechaN.value = EditDocente.fechaNacimientoD;
                txtGenero.value = EditDocente.generoDocente;
                txtCiudad.value = EditDocente.CiudadD;
                txtDireccion.value = EditDocente.direccionD;
      ");
            WriteLiteral(@"          txtTelefono.value = EditDocente.telefonoD;
                txtFechaR.value = EditDocente.fechaRegistroD;
                txtEstado.value = EditDocente.estadoDocente;

            }
            thAction.appendChild(BtnEdit);
            tr.appendChild(thAction);
        });
    }

    window.onload = () => {
        BtnDocente.onclick = async () => {
            try {
                const NuevoDocente = {
                    IdDocente: txtId.value,
                    Codigo: txtCod.value,
                    Nombres: txtNombre.value,
                    Apellidos: txtApellido.value,
                    DNI: txtCedula.value,
                    FechaNacimiento: txtFechaN.value,
                    Genero: txtGenero.value,
                    Ciudad: txtCiudad.value,
                    Direccion: txtDireccion.value,
                    NumeroTelefono: txtTelefono.value,
                    FechaRegistro: txtFechaR.value,
                    Activo: txtEstado.value,


    ");
            WriteLiteral(@"            }
                let flag = true;
                document.querySelectorAll("".FrmContainer input"").forEach(input => {
                    if (input.value == """") {
                        input.style.backgroundColor = ""red"";
                        flag = false;
                        console.log(input);
                        
                    }
                });
                console.log(flag);
                if (flag == false) {
                    console.log(flag);
                    return;

                   
                    
                }
                let Url = ""../api/Cat/PostSaveDocente"";
                let response = await fetch(Url, {
                    method: 'POST', headers: {
                       'Content-Type': ""application/json; charset=utf-8"",
                        'Accept': ""*/*""
                    }, body: JSON.stringify(NuevoDocente)
                });
                response = await response.json();
                co");
            WriteLiteral(@"nsole.log(response);
                if (response == true) {
                    alert(""DATOS GUARDADOS CORRECTAMENTE!!!"");
                } else {
                    alert(""DATOS NO GUARDADOS!!!"");
                }
            } catch (error) {
                //trow;
            }
        }
        BtnFilt.onclick = async () => {
            try {
                let Url = ""../api/Cat/filtrarDocente"";
                let response = await fetch(Url, {
                    method: 'POST', headers: {
                        'Content-Type': ""application/json; charset=utf-8"",
                        'Accept': ""*/*""
                    }//, body: JSON.stringify(Data)
                });
                response = await response.json();
                console.log(response)
                DrawTable(response, ""TblDocente"")
            } catch (error) {
                trow;
            }
        }

    }
</script>

<div>
    <h2> Datos del nuevo Docente</h2>
    <div class=""FrmCon");
            WriteLiteral(@"tainer"">
        <div hidden> Id: <input type=""text"" id=""txtId"" value=""-1"" /></div>
        <div> Codigo: <input class=""form-control"" type=""text"" id=""txtCod"" /></div>
        <div> Nombres: <input class=""form-control"" type=""text"" id=""txtNombre"" /></div>
        <div> Apellidos: <input class=""form-control"" type=""text"" id=""txtApellido"" /></div>
        <div> Cedula: <input class=""form-control"" type=""text"" id=""txtCedula"" /></div>
        <div> Fecha Nacimiento: <input class=""form-control"" type=""date"" id=""txtFechaN"" /></div>
        <div> Genero: <input class=""form-control"" type=""text"" id=""txtGenero"" /></div>
        <div> Ciudad: <input class=""form-control"" type=""text"" id=""txtCiudad"" /></div>
        <div> Direccion: <input class=""form-control"" type=""text"" id=""txtDireccion"" /></div>
        <div> Telefono: <input class=""form-control"" type=""number"" id=""txtTelefono"" /></div>
        <div> Fecha Registro: <input class=""form-control"" type=""date"" id=""txtFechaR"" /></div>
        <div> Estado: <input class=");
            WriteLiteral(@"""form-control"" type=""text"" id=""txtEstado"" /></div>
    </div>
    <div>        
        <input class=""btn btn-primary"" type=""button"" id=""BtnDocente"" value=""Nuevo Docente"" />
        <input class=""btn btn-primary"" type=""button"" id=""BtnFilt"" value=""Filtrar Docentes"" />
        <h2>
            Datos Docentes
        </h2>
        <table class=""table table-bordered table-hover text-center"" id=""TblDocente"">
            <thead></thead>
            <tbody></tbody>
        </table>
    </div>

</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
